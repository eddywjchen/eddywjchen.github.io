<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[To Be Better]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-03-25T07:33:40.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Eddy Chen]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Java多线程]]></title>
    <link href="http://yoursite.com/2016/03/25/java_multithread/"/>
    <id>http://yoursite.com/2016/03/25/java_multithread/</id>
    <published>2016-03-25T01:37:40.000Z</published>
    <updated>2016-03-25T07:33:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u786C_u4EF6_u3001_u64CD_u4F5C_u7CFB_u7EDF_u3001_u8FDB_u7A0B_u3001_u7EBF_u7A0B"><a href="#u786C_u4EF6_u3001_u64CD_u4F5C_u7CFB_u7EDF_u3001_u8FDB_u7A0B_u3001_u7EBF_u7A0B" class="headerlink" title="硬件、操作系统、进程、线程"></a>硬件、操作系统、进程、线程</h3><p>进程和线程是操作系统的概念，比较抽象。下面会以把运行的计算机比喻成一个工厂。</p>
<ul>
<li><strong><em>硬件</em></strong>。硬件相当于工厂里的设备，厂房、仪器、电力等。<br><img src="/source/img/a.jpg" alt="img"></li>
</ul>
<ul>
<li><p><strong><em>操作系统</em></strong>。操作系统是管理和控制计算机硬件与软件资源的计算机程序，是直接运行在硬件上的最基本的系统软件，任何其他软件都必须在操作系统的支持下才能运行。相当于一个工厂的管理体系与机制，管理着工厂的人、物与事。</p>
</li>
<li><p><strong><em>程序与进程</em></strong>。程序只是一组指令的有序集合，它本身没有任何运行的含义，它只是一个静态的实体。相当于工厂里某个产品的生产步骤说明书。进程是一个具有一定独立功能的程序在一个数据集上的动态执行的过程，系统进行资源分配和调度的基本单位。相当于基于生产步骤说明书和生产原料进行生产活动的生产车间，车间是工厂进行物资调配的基本单位。</p>
</li>
<li><p><strong><em>线程</em></strong>。线程是程序执行中一个单一的顺序执行流，是程序执行最小单元，是系统进行处理器调度和分派的基本单位。一个进程可以有一个或多个线程，各个线程之间共享进程的资源。相当于在同一车间下有不同的工人正在进行生产活动，每个进行生产活动的工人都是一条线程，他们共享车间的资源。</p>
</li>
</ul>
<p>现代的操作系统都支持同时运行多个任务，即大部分操作系统都支持多进程并发。正如我们在开着开发工具的编码的同时能听音乐和开着浏览器查文档，同时系统底层还有很多支撑性进程在运行。看起来这些进程好像是在同时运行。事实的真相是，对于一个CPU而言，在某个时间节点上只能运行一个程序，也就是说只能运行一个进程。系统根据调度算法分配CPU时间片给不同进程轮转执行。CPU的执行速度很快，所以虽然在不同的进程间轮换执行，但我们感觉这些进程好像是在同时工作。当然，多核的计算机确实会存在多个进程同时执行的情况。但进程数总是远远大于cpu数的，所以多个进程还是要按照规则等待获取cpu时间片轮转执行。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u786C_u4EF6_u3001_u64CD_u4F5C_u7CFB_u7EDF_u3001_u8FDB_u7A0B_u3001_u7EBF_u7A0B"><a href="#u786C_u4EF6_u3001_u64CD_u4F5C_u7CFB_u7EDF_u]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[2016年的一些想法]]></title>
    <link href="http://yoursite.com/2016/02/23/expectations_in_2016/"/>
    <id>http://yoursite.com/2016/02/23/expectations_in_2016/</id>
    <published>2016-02-22T16:04:40.000Z</published>
    <updated>2016-02-23T14:57:52.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u5DE5_u4F5C_u4E0A"><a href="#u5DE5_u4F5C_u4E0A" class="headerlink" title="工作上"></a>工作上</h3><ul>
<li><p><strong><em>希望能够主导一个新项目的开发工作</em></strong>。通过主导一个新项目，提高自己在需求获取，需求澄清，系统设计方面的能力，在业务能力这一薄弱环节去做更多沉淀。同时，主导一个新项目对沟通协作，计划安排等软能力要求更高，能够让个人综合能力得到充分锻炼。</p>
</li>
<li><p><strong><em>在沟通技巧上可以再做提升</em></strong>。沟通是为了解决问题，而不是分出谁对谁错。不要一味的去否决他人与你不同的想法，更多的是去倾听。在表述自己想法的时候，要条理清晰，有理有据。在沟通情绪方面，就算认为自己是对的或者事实上自己也是对的，也要以平和的情绪去阐述自己的想法。在占据高位的沟通中（帮人解决问题或者项目transfer时候），要保持耐心，及时接受对方反馈并调整沟通方式。沟通不一定要在沟通当下就有结果，沟通可以只是想法的碰撞，碰撞后的思考可能才能找到问题的有效解决方案。</p>
</li>
<li><p><strong><em>工作效率需要提高</em></strong>。对当前自己的工作效率不是很满意，自己是个慢性子的人，也不是很会去做计划。加之自己有点强迫症，有些已经很清晰的问题仍然要去反复思考，要想到通畅无比以确认万无一失，这是很浪费时间的。所以，要做到工作效率的提升，一定要有较好的计划能力和时间管理能力。在个人性格与做事方式上也要做些相应的调整。</p>
</li>
<li><p><strong><em>不仅要有反思与总结，更要有改变与提升</em></strong>。其实随着年龄的增大，意识到自己已经不再是个学生，不再是个长不大的孩子，而是一个成年人，是个职场人士了。自己确实有做一些反思，比如在与父母沟通方面，在工作上，在个人缺陷上面。但是这些反思很多时候只是停留在脑海里，或许反思出来的东西是对的，但是没有执行，没有改变，没有提升，与没反思没总结无异。</p>
</li>
</ul>
<h3 id="u5B66_u4E60_u4E0A"><a href="#u5B66_u4E60_u4E0A" class="headerlink" title="学习上"></a>学习上</h3><ul>
<li><p><strong><em>培养对IT行业的热爱与挖掘具体兴趣点</em></strong>。其实为什么会读计算机？因为高考报志愿的时候我哥叫我读的，他有一个同学也是读计算机，说是计算机现在很火。大学也是混过来的，专业课也挂了两门，更别说培养起软件开发的兴趣。为什么会从事软件开发呢？因为自己就是读计算机的，除了搞软件开发还能搞什么，还有就是软件开发待遇不错。所有严格来说，我并没有多热爱IT行业，也没有很大兴趣。现在软件开发对我来说可能还只是一份工作，而且我是没什么想法的人，也没有其他领域的什么能力，所以我可以预见到未来的很长一段时间我将继续从事软件开发工作。那既然如此，何不在其中找到乐趣，找到兴趣点。让工作带上兴趣的翅膀，兴趣的培养可以让你深入钻研，深入钻研可以让你工作上更加得心应手，获得更多报酬以及更快晋升。所以，培养对IT的热爱，挖掘自己的兴趣点，这会产生一个良性循环，事情会变得越来越美好。但如何去培养热爱，如何去挖掘兴趣呢? 其实我也不知道，我现在采取的措施是多去涉猎一些IT相关的资讯，在这些资讯中去开拓自己的视野，去吸收别人的想法。如果能在这个过程中挖掘出自己的兴趣点，那肯定是极好的。</p>
</li>
<li><p><strong><em>构建自己的知识储备体系</em></strong>。我没有很好的做笔记习惯，也没有写博客的习惯。这样会导致之前遇到过的问题或者学过的技术隔段时间后再去回想已经想不起来了，又得花几乎同样的精力去解决问题或者温习已经忘了差不多的技术。好记性不如烂笔头，笔记不仅可以存储知识与经验教训，而且记笔记的同时也加深了对知识的熟悉与了解程度。良好的笔记习惯，良好的书签管理和文档归类习惯，能很好的提高工作效率与减低知识的遗忘率。博客与笔记也具有同样的功能，但博客与笔记不同的是，笔记是写给自己看的，博客是写给别人看的，是把知识与经验与别人分享的一个平台。所以，写博客是很能锻炼书面组织与表达能力的。博客在于分享，当把你的知识与经验分享给别人并获得别人认可的时候，乐趣自然就来了。这也是上文培养兴趣点的一种实现途径。在年初的时候我已经建立了自己的个人博客，虽然还没有写具体的博文，但至少是个开始。博客地址：www.eddychen.me。除了笔记、博客，技术社区活跃度也是技术储备的一个重要环节。我现阶段只是仅仅在github上面用用别人的开源项目（还有就是托管一下学习项目的源码），在stackoverflow上看看是不是别人曾经遇到过我现在正在遇到的问题。至于活跃度，根本就是零。也为自己找过借口，写开源项目，在技术平台上发表文章或者回答别人问题，这是大神们才做的事，我就一渣渣。但心里另外一个小人也在做抗争，社区的活跃度其实是你的个人简历，能提高你的个人竞争力，同时，技术社区也能培养你对IT开发的热爱。做笔记，写博客，活跃于社区，这都是要循序渐进，不是一蹴而就的。其实考验的是耐心与坚持，培养出来的是一个好的习惯，而一个好的习惯是能带来诸多好处的。</p>
</li>
<li><p><strong><em>提升英语水平</em></strong>。我是一个只过了大学四级的英语菜鸟，但是英语能力却又是程序猿的一个重要能力。查阅技术文档，google搜索，加之又处于外企，IM、邮件等都要求英语，所以英语对我来说显得更为重要，况且技多不压身。其实我也有意识地在提高自己的英语能力，当然更多是写作与阅读能力。现在每天早上边吃早餐会边看一篇双语阅读的文章，平时遇到不懂的单词也会去查，去记，即使这个单词可能不对整句话的理解带来问题。看美剧的这个爱好对提升我的英语能力也有那么一点点帮助，我有强迫自己去看英文字幕而忽略中文字幕，但有时候精彩的剧情会比学习英语更加吸引你。当然，不是从事英语相关的工作，不会刻意去像在大学时代一样去学习英语，更希望是在频繁使用，有意识的潜移默化中去提高。</p>
</li>
</ul>
<h3 id="u751F_u6D3B_u4E0A"><a href="#u751F_u6D3B_u4E0A" class="headerlink" title="生活上"></a>生活上</h3><ul>
<li><p><strong><em>规律作息时间，多锻炼身体</em></strong>。身体是革命的本钱。</p>
</li>
<li><p><strong><em>多参与一些社交活动</em></strong>。没事可以经常跑深圳、广州找小伙伴们一起玩耍，毕竟在珠海工作的朋友太少了。</p>
</li>
<li><p><strong><em>培养一些户外兴趣爱好</em></strong>。如骑车、徒步等。</p>
</li>
</ul>
<p>以上所述不能说是总结，也不能说是计划。只是一些2016年一些大致的想法，行动往往比纸上谈兵更有说服力，希望2017这个时候再回头看想法已成为现实。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u5DE5_u4F5C_u4E0A"><a href="#u5DE5_u4F5C_u4E0A" class="headerlink" title="工作上"></a>工作上</h3><ul>
<li><p><strong><em>希望能够主导一个新项目的开发工作<]]>
    </summary>
    
  </entry>
  
</feed>
